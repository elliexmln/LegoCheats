--ne("CMD", "DESC", false)
--[[ UPDATE LOGS:
NOTHING.
Notes:
--NOTE TO SELF:
V means verified and not bugged
B means bugged
"--" means done command
]]--
local function ne(ti, de, ca)
    GLOBALADDCMD(ti, de, ca)
end
ne("WELCOME", "Its not a bug, its a feature. you will experience bug(s) :D", false)
ne("prefix [Prefix]", "Changes prefix (Default prefix is: ?)", false) --
ne("KILL CMDS", false, true) --KILL CMDS
ne("kill / oof / die [plr,random,team,all]", "Kills a selected player(s)", false) --
ne("meleekill / mkill [plr,random,team,all]", "Kills a selected player(s) using meleeEvent(s)", false) --
ne("punchkill / pkill [plr,random,team,all] [interval]", "Kills player(s) by punching them to death", false) -- =Useless command lol
ne("voidkill / vkill [plr,random]", "Kills player by teleporting them under the void", false) --
ne("damage / dmg [plr,random,all] [dmg=1-10]", "Self explanatory, going higher may crash server!", false) --
ne("loopkill / lk [plr,team,all]", "Loops killing player(s)", false) --
ne("unloopkill / unlk [plr,team,all]", "Stops loop-killing player(s)", false) --
ne("meleelk / mlk [plr,random,hostiles,team,all]", "Melee-loopkills player(s)", false) --
ne("unmeleelk / unmlk [plr,hostiles,team,all]", "Stops melee-killing player(s)", false) --
ne("lpunchkill / lpkill [plr,random,team,all]", "Loops punch-kill a selected player(s)", false) --
ne("unlpunchkill / unlpkill [plr,all]", "Stops punch-killing player(s)", false) --
ne("lvoidkill / lvkill / lvk [plr,random]", "Loop void-kill player.", false) --
ne("unlvoidkill / unlvkill / unlvk [plr,all]", "Stop loop-void killing player(s)", false) --
ne("randomkill / rkill [plr,random,team,all]", "Randomly kill selected player(s)", false) --
ne("unrandomkill / unrkill [plr,all]", "Stop randomly killing player(s)", false) --
ne("killaura / kaura [plr,random]", "Other player(s) near the selected player dies",  false) --
ne("virus / killtouch [plr,random,all]", "Other player(s) who touches the selected player dies", false) --
ne("unkillaura / unkaura [plr,all]", "Removes killaura(s) from player(s)", false) --
ne("unvirus / unkilltouch [plr,all]", "Removes antitouch from player(s)", false) --
ne("tkillaura / tka [team,enemies]", "Killaura but only for a selected team(s), uses meleeEvent(s)", false) --
ne("untkillaura / untka [team,enemies,all]", "Stops killaura to selected team(s)", false) --
ne("meleeaura / maura", "Killaura but using meleeEvent(s)", false) --
ne("meleetouch / mtouch", "Killtouch but using meleeEvent(s)", false) --
ne("unmeleetouch / unmtouch", "Stops melee-killing players who touch you", false) --
ne("deathnuke / dnuke [plr,random]", "If that selected player dies, everyone dies", false) --
ne("undeathnuke / undnuke [plr,all]", "Removes deathnuke", false) --
ne("detroit / ohio", "If a player dies, everyone dies.", false) --
ne("undetroit / unohio", "Stop ohio mode", false) --
ne("AUTOKILL CMD", false, true) --automatic kill
ne("autokill / akill [hostile]", "Automatically kill players who equip hostile items", false) --
ne("autokill / akill [riotuser]", "Automatically kill riot-gamepass users", false) --
ne("autokill / akill [shielduser]", "Automatically kill pay2win shield users", false) --
ne("autokill / akill [handcuffer]", "Automatically kill stupid guards that arrest people", false) --
ne("autokill / akill [taser]", "Automatically kill annoying guards that use taser", false) --
ne("autokill / akill [tigeruser]", "Auto-kill braindead tiger admin users who use !addnuke", false) --
ne("unautokill / unakill [type or all]", "Stops automatically killing players accordingly", false) --
ne("lpunch", "Teleport to players and punch them for no reason", false) --
ne("unlpunch", "stop punching players for no reason", false) --

ne("ARREST/TAZE CMDS", false, true) -- ARREST AND TAZE COMMANDS
ne("arrest / ar [plr,random,team,all]", "Arrests selected player(s)", false) --
ne("spamarrest / annoy / sa [plr,random]", "Spams arrest player to the point they get annoyed", false) --
ne("unspamarrest / unannoy / unsa", "Stop spam-arresting player.", false) --
ne("tase / ta [plr,random,team,all]", "Taze selected player(s)", false) --
ne("arrestaura / aaura", "Automatically arrest players near you", false) --
ne("taseaura / taura [plr,random]", "Other player(s) near the selected player gets tased", false) --
ne("untaseaura / untaura [plr,all]", "Remove tase-aura from player(s)", false) --
ne("makecrim / crim [plr,random,team,all]", "Turn selected player(s) to criminal", false) --
ne("crimpad / cpad [plr,random]", "Teleport selected player to crimpad", false) --
ne("loopcrim / lcrim [plr,random,all]", "Automatically turn player(s) into criminal", false) --
ne("unloopcrim / unlcrim [plr,all]", "Stop making player(s) into criminal", false) --
ne("looptase / lta [plr,random,team,all]", "Loops tase selected player(s)", false) --
ne("unlooptase / unlta [plr,team,all]", "Stops loop-tasing selected player(s)", false) --
ne("looparrest / lar [plr,random,team,all]", "Loops arresting selected player(s)", false) --
ne("autoarrest / autoar [plr,all]", "Automatically arrest player(s) in illegal region", false) --
ne("unlooparrest / unlar [plr,team,all]", "Stops loop arresting selected player(s)", false) --
ne("unautoarrest / unaar [plr,all]", "Stops auto-arresting selected player(s)", false) --

ne("ITEMS/GUNS/MOD CMDS", false, true) -- ITEMS AND GUNS COMMANDS
ne("ak / ak47", "Obtain the gun AK-47", false) --
ne("remington / shotgun / rem", "Obtain the gun Remington 870", false) --
ne("m9 / pistol", "Obtain the gun M9", false) --
ne("m4 / m4a1", "Obtain the gun M4A1 (REQUIRES GAMEPASS)", false) --
ne("hammer / ham", "Obtain hammer in the yard", false) --
ne("knife / knive", "Obtain knife in the yard", false) --
ne("givekey / gkey [plr]", "Gives player or you keycard", false) --
ne("superknife / sknife", "Obtain and make knife one-shot", false) --
ne("riotshield / shield", "Obtain RiotShield (REQUIRES GAMEPASS AND GUARDS TEAM)", false) --
ne("skimask / mask", "Puts on ski-mask (REQUIRES GAMEPASS)", false) --
ne("riothelmet / helmet", "Puts on riot helmet (REQUIRES GAMEPASS)", false) --
ne("riotarmor / armor", "Puts on riot armor (REQUIRES GAMEPASS)", false) --
ne("food / dinner", "Obtains food tray from cafeteria", false) --
ne("bat / baseballbat", "Client sided baseball bat", false) --
ne("guns / allguns", "Obtain all guns in the game", false) --
ne("items / allitems", "Obtain all items (including clothes)", false) --
ne("autoguns / aguns", "Automatically gives you guns", false) --
ne("autoitems / aitems", "Automatically get all items/guns", false) --
ne("autofire", "Make guns like remington or m9 automatically fire (PC ONLY)", false) --
ne("firerate / fastfire", "Makes guns shoot faster", false) --
ne("autofirerate / affr", "Automatically apply faster fire rate to gun(s)", false) --
ne("infammo / infa", "Applies infinite ammo to gun (Must be equipped)", false) --
ne("gunmods / opgun", "Applies all gun mods to the selected gun (Gun must be equipped)", false) --
ne("autogunmod / agm", "Automatically apply all gun mods", false) --
ne("autoinfammo / ainfa", "Automatically apply infinite ammo to all gun(s)", false) --
ne("headshot / hshot", "Always headshot players even through walls", false) --
ne("silentaim / saim", "Headshot but more legit and not go through walls", false) --
ne("loot / pinata", "Makes you poop out free loot (Guns/Key)", false) --
ne("unloot / unpinata", "Stops pooping out free loot", false) --

ne("FLING CMDS", false, true) -- Flinger commands
ne("antifling / afling", "Prevents other exploiter(s) from flinging you", false) --
ne("fling / flung [plr,random,all]", "Flings selected player(s) using velocity", false) --
ne("loopfling / lfling [plr,random,all]", "Loop-flinging selected player(s)", false) --
ne("unloopfling / unfling [plr,all]", "Stops loop-flinging selected player(s)", false) --
ne("sfling / carfling [plr,random,all]", "Fling player while using a car to do it", false) --
ne("loopcarfling / lsfling [plr,random]", "Loops carfling on selected player(s)", false) --
ne("unloopcarfling / unlsfling [plr,all]", "Stops loop-carflinging player(s)", false) --
ne("antivelocity / avelo", "Disable all velocity (VERY LAGGY)", false) --

ne("LOCAL CMDS", false, true) -- Local-only commands
ne("rejoin / rj", "Rejoin the server (Unload script)", false) --
ne("serverhop / svhop", "Find and join another server (May not work in shit executor)", false) --
ne("antishield / antipay2win", "Prevent shields from pay2win users", false) --
ne("nodoors / rdoors", "Removes all doors in client side", false) --
ne("nowalls / rwalls", "Removes all walls in client side", false) --
ne("rewalls / walls", "Adds walls back in client side", false) --
ne("redoors / doors", "Adds all doors back to client side", false) --
ne("autorespawn / autore [boolean]", "Toggles autorespawn to true or false", false) --
ne("runspeed [number]", "Changes the speed when running", false) --
ne("fly / flight [speed]", "Makes you or a car fly (works in mobile)", false) --
ne("unfly / noflight", "Stops flying or stops car fly", false) --
ne("speed [number]", "Changes your walkspeed", false) --
ne("loopspeed / lspeed [number]", "Always changes your walkspeed to (Number)", false) --
ne("noclip / noclip", "Ability to walk through walls like its nothing", false) --
ne("jumppower / jump [number]", "Changes how high you jump", false) --
ne("ljumppower / ljump [number]", "Always changes your jump-power to (Number)", false) --
ne("unloopspeed / unlspeed", "Stops changing speed", false) --
ne("unljumppower / unljump", "Stops changing jump-power", false) --
ne("unnoclip / clip", "Disables the ability to walk through walls", false) --
ne("btools / btool", "Obtain client-sided btools", false) --
ne("antivoid / avoid", "Prevent falling in the void (Enabled by default)", false) --

ne("POWERS/DEFENSE", false, true) --POWERS AND DEFENSE
ne("onepunch / opunch", "One-punch any player.", false) --
ne("oneshot / oshot", "One-shot players instantly", false) --
ne("punchaura / paura", "Increases punch range to 15 studs", false) --
ne("spampunch / spunch", "Spam punch when holding the punch button", false) --
ne("friendlyfire / ffire", "Automatically changes to a different team when shooting a teammate", false) --
ne("antishoot / ashoot", "Shoots back player(s) who try to shoot you.", false) --
ne("antipunch / apunch", "Any players who try to punch you dies", false) --
ne("antiarrest / aar", "Prevents you from being arrested", false) --
ne("antitase / atase", "Prevents you from being tased", false) --
ne("arrestback / arb", "If a guard tries to arrest you, they get arrested back", false) --
--ne("antistun / moveable", "Automatically set walkspeed when frozen", false) --USELESS CMD?
--ne("refresharrest / rantiar", "Anti-arrest but refreshes your character instead", false) --Useless command?

ne("CLICK CMDS", false, true) -- Click commands
ne("clickkill / ckill [boolean]", "Click to kill player(s)", false) --
ne("clickarrest / carrest [boolean]", "Click to arrest player(s)", false) --
ne("clicktase / ctase [boolean]", "Click to tase player(s)", false) --
ne("clickfling / ckfling [boolean]", "Click to fling player(s)", false) --
ne("clickgoto / cgoto [boolean]", "Click to teleport to player(s)", false) --
ne("clickbring / ckbring [boolean]", "Click to bring player(s)", false) --
ne("clickteleport / ctp [boolean]", "Use tool to teleport (Cause mobile)", false) --

ne("GIVE/WHITELIST CMDS", false, true) --GIVE COMMANDS
ne("givecmds / gcmds [plr,random,all]", "Gives player(s) *admin* commands", false) --
ne("revokecmds / rcmds [plr,all]", "Removes/Revokes commands from player(s)", false) --
ne("whitelist / wl [plr]", "Excludes player from kill commands", false)
ne("unwhitelist / unwl [plr]", "Removes exclusion from player", false)
ne("givepower / gpw [plr] [Power]", "Gives player(s) powers/defense", false) --
ne("removepower / rpw [plr,all] [Power,all]", "Removes power/defense from player.", false) --
ne("PowerList \/", false, true) --List of all powers
ne("onepunch / opunch [plr]", "Make them one-punch other player(s)", false) --
ne("oneshot / oshot [plr]", "Make them one-shot other player(s)", false) --
ne("punchaura / paura [plr]", "Increases a selected player(s) punch range.", false) --
ne("antipunch / apunch [plr]", "If another player punches the selected player(s), they die.", false) --
ne("antiarrest / aar [plr]", "If a guard pulls out a handcuff near the selected player(s), they die.", false) --
ne("antitase / atase [plr]", "If a guard pulls out a taser near the selected player(s), they die.", false) --
ne("antishoot / ashoot [plr]", "If someone shoots the selected player(s), they die.", false) --
ne("friendlyfire / ffire [plr]", "Friendly-fire for the selected player(s)", false) --
ne("EXAMPLE USAGE:", "givepower onepunch playername", false) -- for dumbass players who dont know how to use it :/

ne("BRING / GOTO / VIEW / TEAM", false, true) --BRING / GOTO CMDS
ne("goto / to [plr,random]", "Teleports you to a selected player.", false) --
ne("bring / bri [plr,random,all]", "Brings player(s) to your location", false) --
ne("teleport / tp [plr1] [plr2]", "Teleports selected player1 to player2", false) --
ne("view / spectate [plr,random]", "View a player's POV", false) --
ne("unview / unspectate [plr]", "Stop viewing player", false) --
ne("copyteam / antilk / ct [plr]", "Copy a player's team (and prevent them from killing you)", false) --
ne("uncopyteam / unantilk / unct", "Stop copying the player's team", false) --
ne("team / t [inmate,guard,criminal,neutral,random]", "Changes your team to the selected team", false) --
ne("guard / guards / gu", "Alias to team guards", false) --
ne("inmate / inmates / in", "Alias to team inmates", false) --
ne("criminal / criminals / cr", "Alias to team criminals", false) --
ne("neutral / neutrals / ne", "Alias to team neutrals", false) --

ne("CRASH/LAG CMDS", false, true) -- CRASH COMMANDS
ne("antilag / antispike", "Only disable ClientReplicator", false) --
ne("anticrash / antifreeze", "Prevents your client from being crashed (Disables connections)", false) --
ne("servercrash / svcrash", "Crashes the server (Basic M9 Crash)", false) --
ne("lastresort / lresort", "Crash server with remington (Maybe better than m9)", false) --
ne("timeout / lagout", "Loops sending shootevents until server timedout", false) --
ne("tasercrash / tsrcrash", "Crash server using taser (lol)", false) --
ne("time / tick [stop/play]", "Stop time just like in the game superhot", false) --
ne("serverlag / svlag [strength]", "Lags the server with strength", false) --
ne("unsvlag / unserverlag", "Stop lagging the server", false) --
ne("serverspike / svspike [strength]", "Make server ping spike with strength", false) --
ne("eventcrash / ecrash", "May or may not work depending on your internet", false) --
ne("espamlag / elag [amount]", "EventLag everyone with amount (Higher number is better)", false) --
ne("forcelag / frlag", "Force all players to freeze (Varies on devices and internet)", false) --
ne("forcecrash / frcrash", "Forcelag but more powerful (May permanently spike your clientping)", false)  --
ne("loopfcrash / lfcrash", "Loop-forcing players to crash", false) --
ne("unloopfcrash / unlfcrash", "Stops forcing players to crash", false) --
ne("itemlag / ilag [interval]", "Lag everyone using items (Client ping may permanently lag)", false) --
ne("crashnuke / cnuke [plr,random]", "deathnuke but the server crashes instead (CANNOT UNDO)", false) --
ne("laggygun / laggun", "Gives you remington 870 that lags the server when fired", false) --
--ne("placeholdercrash / crash4", "Crashes the server using every single gun", false) --too useless

ne("MISC CMDS", false, true) -- MISCELLANEOUS
ne("forcefield / ff", "Enables forcefield (Basically just refresh guards)", false) --
ne("unforcefield / unff", "Disable forcefield", false) --
ne("autoguard / aguard", "When killing innocents, automatically switch to guards team.", false) --
ne("spinnytools / spintool [boolean] [speed] [math.rad]", "Automatically make items you equip spin", false) --
ne("itemsequip / iequip", "Equip all items in the backpack (Useful for spinnytools)", false) --
ne("opendoors / odoors / open [gate]", "Opens every door or gate", false) --
ne("loopopendoors / loopdoors", "Loops-opening every door", false) --
ne("unloopopendoors / unloopdoors", "Stops loop-opening every door", false) --
ne("cars / scar", "Spawns a car to your location", false) --
ne("policecar / pcar", "Spawns a police car to your location", false) --
ne("carsto / scarto [plr,random]", "Spawns a car to a specific player.", false) --
ne("void / abyss [plr,random]", "Teleport a player into the abyss (9e9)", false) --
ne("loopvoid / lvoid [plr,random]", "Loop teleport a player into the abyss", false) --
ne("unloopvoid / unlvoid [plr,all]", "Stops loop teleporting player(s) into void", false) --
ne("trap / punish [plr,random]", "Traps player inside a building", false) --
ne("untrap / unpunish [plr,all]", "Stops trapping player(s)", false) --
ne("anticheat / detection [boolean]", "Detect exploiter(s), (Warning: RESOURCE INTENSIVE!)", false) --
ne("soundspam / ssp [boolean]", "Spam sounds (Warning: VERY LAGGY AND INTENSIVE!)", false) --
ne("loopsounds / lss [boolean]", "Soundspam but less intensive and dont lag client ping", false) --
ne("loopcars / spamcars", "Spam spawning cars in your location", false) --
ne("unloopcars / unspamcars", "Stop spamming cars", false) --
ne("bcar / bringcar", "Carspawn but brings used car or new one", false) --
ne("loudpunch / lph", "When pressed (Not hold), Automatically send soundevents to all players", false) --
ne("spamlog / slog", "Spams chatlogs (Spams exploiter(s) chatlogger)", false) --

ne("TELEPORTS", false, true) --TELEPORT PLACE(S)
ne("nexus / nex [plr or me]", "Teleports you (or a player) to the location: Nexus", false) --
ne("crimbase / cbase [plr or me]", "Teleports you (or a player) to the location: Criminal Base", false) --
ne("armory / arm [plr or me]", "Teleports you (or a player) to the location: Armory", false) --
ne("yard / yar [plr or me]", "Teleports you (or a player) to the location: Yard", false) --
ne("roof / roo [plr or me]", "Teleports you (or a player) to the location: Roof", false) --
ne("ytower / ytow [plr or me]", "Teleports you (or a player) to the location: Yard-Tower", false) --
ne("gtower / gtow [plr or me]", "Teleports you (or a player) to the location: Gate-Tower", false) --
ne("garage / gar [plr or me]", "Teleports you (or a player) to the location: Garage", false) --
ne("cafeteria / cafe [plr or me]", "Teleports you (or a player) to the location: Cafeteria", false) --
ne("kitchen / kit [plr or me]", "Teleports you (or a player) to the location: Kitchen", false) --
ne("gastation / gas [plr or me]", "Teleport to the gas station", false) --
ne("neighborhood / nhood [plr or me]", "Teleport to the neighbor-hood", false) --
ne("store / stor [plr or me]", "Teleport to the store", false) --
ne("roadend / rend [plr or me]", "Teleport to the end of the road", false) --
ne("deadend / dend [plr or me]", "Teleport to dead-end", false) --
ne("mansion / lux [plr or me]", "Teleport inside the mansion", false) --

ne("OTHER CMDS", false, true) --Useless commands idk anyways
ne("roast / argue [plr,random]", "Roast a player, (totally did not search google for it)", false) --
ne("ipgrab / getip [plr]", "Get someones ip address (REAL OMG)", false) --
ne("dice", "Tells you yes or no randomly", false) -- language barrier, i cant describe what it is


--Debug
ne("DEBUG (DO NOT TOUCH)", false, true)
ne("debugstop", "Stops all debug", false)
ne("debug / deb [Instance.Name]", "executes debug from debug list (Do not touch)", false)
ne("DEBUG LIST:", false, true)
ne("deletecmdslist", "delete all frames in CMDS_List", false)
ne("deletetogglelist", "delete all frames in Toggles_List", false)
ne("addlist [title] [desc]", "add list to CMDS_List", false)
ne("category [title]", "add category to CMDS_List", false)
ne("toggle [textbox=boolean] [title] [description]", "add new toggle to Toggles_List", false)

--[[ What are you doing here???
local temp = {
	testingok = false;
};
NewToggleList("HELLO", "SKIBIDI RIZZLER AMONG US", temp.testingok, function()
	temp.testingok = not temp.testingok
	return temp.testingok
end)
NewToggleList("TESTING", "wadjawi834", "click", function(arg)
	local stri = tonumber(arg)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = stri
	print("temp")
end, true)
]]--

